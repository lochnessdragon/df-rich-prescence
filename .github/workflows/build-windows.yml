name: Build Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - name: Clone DFHack
      run: git clone --recursive https://github.com/DFHack/dfhack.git
      
    - uses: actions/checkout@v3
      with:
        path: dfhack/plugins/external/df-rich-presence
    - name: Unblock the required files
      run: |
           dir
           Get-ExecutionPolicy
           Unblock-File -path .\generate-MSVC-all.bat
           Unblock-File -path .\build-release.bat
      working-directory: dfhack/build/win64/

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: generate-MSVC-all.bat
      working-directory: dfhack/build/win64/

    - name: Build
      # Build your program with the given configuration
      run: build-release.bat
      working-directory: dfhack/build/win64/

